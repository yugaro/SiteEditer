{"ast":null,"code":"var _jsxFileName = \"/Users/yuga/Yu-legance/test23/src/components/Header/Slide/Slide.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Slide.css';\nimport { CSSTransition } from \"react-transition-group\";\nimport topimg1 from '../image/top1.jpg';\nimport topimg2 from '../image/top2.jpg';\nimport topimg3 from '../image/top3.jpg';\nimport topimg4 from '../image/top4.jpg';\nimport topimg5 from '../image/top5.jpg';\nimport topimg6 from '../image/top6.jpg'; // const [count, setCount] = useState(0);\n\n// const images = ['./image/top1.jpg'];\n// {\n//   url: './image/top1.jpg',\n// },\n// {\n//   url: './image/top2.jpg',\n// },\n// {\n//   url: './image/top3.jpg',\n// },\n// {\n//   url: './image/top4.jpg',\n// },\n// {\n//   url: './image/top5.jpg',\n// },\n// {\n//   url: './image/top6.jpg',\n// },\n// class Slide extends React.Component {\n//   render() {\n//     const sec = 1000;\n//     const images = ['./image/top1.jpg'];\n//     useEffect(() => {\n//     const interval = setInterval(() => {\n//       setCount((count) => {\n//         return count >= images.length - 1 ? 0 : count + 1;\n//       });\n//       }, sec);\n//       return () => {\n//         clearInterval(interval);\n//       };\n//     }, [images, sec]);\n//     const slide = images.map((image, index) => {\n//       return (\n//         <CSSTransition\n//           key={index}\n//           timeout={sec}\n//           in={index === count}\n//           classNames=\"fade\"\n//           unmountOnExit\n//         >\n//           <div className='header-img' style={{ backgroundImage: `url(${image})` }} />\n//         </CSSTransition>\n//       );\n//     });\n//     return (\n//       <div className='slide'> {slide} </div>\n//     );\n//   }\n// }\n// そろそろ始めましょうか\nconst Slide = ({\n  sec = 1000,\n  images = [{\n    topimg1\n  }, {\n    topimg2\n  }, {\n    topimg3\n  }, {\n    topimg4\n  }, {\n    topimg5\n  }, {\n    topimg6\n  }]\n}) => {\n  // 表示する画像を指定するための変数\n  const [count, setCount] = useState(0); // 一定時間ごとに表示する画像を切り替える処理\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(count => {\n        return count >= images.length - 1 ? 0 : count + 1;\n      });\n    }, sec);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [images, sec]); // 画像表示処理\n\n  const slide = images.map((image, index) => {\n    return /*#__PURE__*/React.createElement(CSSTransition, {\n      key: index,\n      timeout: sec,\n      in: index === count,\n      classNames: \"fade\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${\"header-img\"} ${\"header-img\" + index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }));\n  }); // return <div className='header-img'>{slide}</div>;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 10\n    }\n  }, \" \", slide, \" \");\n};\n\nexport default Slide;","map":{"version":3,"sources":["/Users/yuga/Yu-legance/test23/src/components/Header/Slide/Slide.js"],"names":["React","useState","useEffect","CSSTransition","topimg1","topimg2","topimg3","topimg4","topimg5","topimg6","Slide","sec","images","count","setCount","interval","setInterval","length","clearInterval","slide","map","image","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CACA;;AAOA;AACM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACN;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA,MAAMC,KAAsB,GAAG,CAAC;AAAEC,EAAAA,GAAG,GAAG,IAAR;AAAcC,EAAAA,MAAM,GAAG,CAAC;AAACR,IAAAA;AAAD,GAAD,EAAY;AAACC,IAAAA;AAAD,GAAZ,EAAuB;AAACC,IAAAA;AAAD,GAAvB,EAAkC;AAACC,IAAAA;AAAD,GAAlC,EAA6C;AAACC,IAAAA;AAAD,GAA7C,EAAwD;AAACC,IAAAA;AAAD,GAAxD;AAAvB,CAAD,KAAwG;AACrI;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC,CAFqI,CAIrI;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCF,MAAAA,QAAQ,CAAED,KAAD,IAAW;AAClB,eAAOA,KAAK,IAAID,MAAM,CAACK,MAAP,GAAgB,CAAzB,GAA6B,CAA7B,GAAiCJ,KAAK,GAAG,CAAhD;AACD,OAFO,CAAR;AAGD,KAJ2B,EAIzBF,GAJyB,CAA5B;AAKA,WAAO,MAAM;AACXO,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD,KAFD;AAGD,GATQ,EASN,CAACH,MAAD,EAASD,GAAT,CATM,CAAT,CALqI,CAgBrI;;AACA,QAAMQ,KAAK,GAAGP,MAAM,CAACQ,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzC,wBACE,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,OAAO,EAAEX,GAFX;AAGE,MAAA,EAAE,EAAEW,KAAK,KAAKT,KAHhB;AAIE,MAAA,UAAU,EAAC,MAJb;AAKE,MAAA,aAAa,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAK,MAAA,SAAS,EAAG,GAAE,YAAa,IAAG,eAAeS,KAAM,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD,GAba,CAAd,CAjBqI,CA+BrI;;AACA,sBAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyBH,KAAzB,MAAP;AACD,CAjCD;;AAmCA,eAAeT,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Slide.css';\nimport { CSSTransition } from \"react-transition-group\";\nimport topimg1 from '../image/top1.jpg';\nimport topimg2 from '../image/top2.jpg';\nimport topimg3 from '../image/top3.jpg';\nimport topimg4 from '../image/top4.jpg';\nimport topimg5 from '../image/top5.jpg';\nimport topimg6 from '../image/top6.jpg';\n// const [count, setCount] = useState(0);\n\ntype Props = {\n  sec: number;\n  images: string[];\n};\n\n// const images = ['./image/top1.jpg'];\n      // {\n      //   url: './image/top1.jpg',\n      // },\n      // {\n      //   url: './image/top2.jpg',\n      // },\n      // {\n      //   url: './image/top3.jpg',\n      // },\n      // {\n      //   url: './image/top4.jpg',\n      // },\n      // {\n      //   url: './image/top5.jpg',\n      // },\n      // {\n      //   url: './image/top6.jpg',\n      // },\n// class Slide extends React.Component {\n//   render() {\n    \n//     const sec = 1000;\n//     const images = ['./image/top1.jpg'];\n//     useEffect(() => {\n//     const interval = setInterval(() => {\n//       setCount((count) => {\n//         return count >= images.length - 1 ? 0 : count + 1;\n//       });\n//       }, sec);\n//       return () => {\n//         clearInterval(interval);\n//       };\n//     }, [images, sec]);\n\n//     const slide = images.map((image, index) => {\n//       return (\n//         <CSSTransition\n//           key={index}\n//           timeout={sec}\n//           in={index === count}\n//           classNames=\"fade\"\n//           unmountOnExit\n//         >\n//           <div className='header-img' style={{ backgroundImage: `url(${image})` }} />\n//         </CSSTransition>\n//       );\n//     });\n\n//     return (\n//       <div className='slide'> {slide} </div>\n//     );\n//   }\n\n// }\n\n\n// そろそろ始めましょうか\nconst Slide: React.FC<Props> = ({ sec = 1000, images = [{topimg1}, {topimg2}, {topimg3}, {topimg4}, {topimg5}, {topimg6}] }: Props) => {\n  // 表示する画像を指定するための変数\n  const [count, setCount] = useState(0);\n\n  // 一定時間ごとに表示する画像を切り替える処理\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount((count) => {\n        return count >= images.length - 1 ? 0 : count + 1;\n      });\n    }, sec);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [images, sec]);\n\n  // 画像表示処理\n  const slide = images.map((image, index) => {\n    return (\n      <CSSTransition\n        key={index}\n        timeout={sec}\n        in={index === count}\n        classNames=\"fade\"\n        unmountOnExit\n      >\n      {/*style={{ backgroundImage: `url(${image})`}}*/}\n        <div className={`${\"header-img\"} ${\"header-img\" + index}`}></div>\n      </CSSTransition>\n    );\n  });\n  // return <div className='header-img'>{slide}</div>;\n  return <div className='slide'> {slide} </div>\n};\n\nexport default Slide;"]},"metadata":{},"sourceType":"module"}