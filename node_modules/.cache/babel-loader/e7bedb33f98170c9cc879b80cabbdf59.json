{"ast":null,"code":"var _jsxFileName = \"/Users/yuga/Yu-legance/test23/src/components/Header/Slide/Slide.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Slide.css';\nimport { CSSTransition } from \"react-transition-group\";\nconst [count, setCount] = useState(0); // type Props = {\n//   sec: number;\n//   images: string[];\n// };\n// const images = ['./image/top1.jpg',\n//       // {\n//       //   url: './image/top1.jpg',\n//       // },\n//       // {\n//       //   url: './image/top2.jpg',\n//       // },\n//       // {\n//       //   url: './image/top3.jpg',\n//       // },\n//       // {\n//       //   url: './image/top4.jpg',\n//       // },\n//       // {\n//       //   url: './image/top5.jpg',\n//       // },\n//       // {\n//       //   url: './image/top6.jpg',\n//       // },\n//     ];\n\nclass Slide extends React.Component {\n  render() {\n    const sec = 1000;\n    const images = ['./image/top1.jpg'];\n    useEffect(() => {\n      const interval = setInterval(() => {\n        setCount(count => {\n          return count >= images.length - 1 ? 0 : count + 1;\n        });\n      }, sec);\n      return () => {\n        clearInterval(interval);\n      };\n    }, [images, sec]);\n    const slide = images.map((image, index) => {\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        key: index,\n        timeout: sec,\n        in: index === count,\n        classNames: \"fade\",\n        unmountOnExit: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"header-img\",\n        style: {\n          backgroundImage: `url(${image})`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slide\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, \" \", slide, \" \");\n  }\n\n} // // そろそろ始めましょうか\n// const Slide: React.FC<Props> = ({ sec = 1000, images = '../image/top1.jpg' }: Props) => {\n//   // 表示する画像を指定するための変数\n//   const [count, setCount] = useState(0);\n//   // 一定時間ごとに表示する画像を切り替える処理\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setCount((count) => {\n//         return count >= images.length - 1 ? 0 : count + 1;\n//       });\n//     }, sec);\n//     return () => {\n//       clearInterval(interval);\n//     };\n//   }, [images, sec]);\n//   // 画像表示処理\n//   const slide = images.map((image, index) => {\n//     return (\n//       <CSSTransition\n//         key={index}\n//         timeout={sec}\n//         in={index === count}\n//         classNames=\"fade\"\n//         unmountOnExit\n//       >\n//         <div className='header-img' style={{ backgroundImage: `url(${image})` }} />\n//       </CSSTransition>\n//     );\n//   });\n//   // return <div className='header-img'>{slide}</div>;\n//   return <div className='slide'> {slide} </div>\n// };\n\n\nexport default Slide;","map":{"version":3,"sources":["/Users/yuga/Yu-legance/test23/src/components/Header/Slide/Slide.js"],"names":["React","useState","useEffect","CSSTransition","count","setCount","Slide","Component","render","sec","images","interval","setInterval","length","clearInterval","slide","map","image","index","backgroundImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMK,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AAEP,UAAMC,GAAG,GAAG,IAAZ;AACA,UAAMC,MAAM,GAAG,CAAC,kBAAD,CAAf;AACAR,IAAAA,SAAS,CAAC,MAAM;AAChB,YAAMS,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCP,QAAAA,QAAQ,CAAED,KAAD,IAAW;AAClB,iBAAOA,KAAK,IAAIM,MAAM,CAACG,MAAP,GAAgB,CAAzB,GAA6B,CAA7B,GAAiCT,KAAK,GAAG,CAAhD;AACD,SAFO,CAAR;AAGC,OAJyB,EAIvBK,GAJuB,CAA5B;AAKE,aAAO,MAAM;AACXK,QAAAA,aAAa,CAACH,QAAD,CAAb;AACD,OAFD;AAGD,KATQ,EASN,CAACD,MAAD,EAASD,GAAT,CATM,CAAT;AAWA,UAAMM,KAAK,GAAGL,MAAM,CAACM,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzC,0BACE,oBAAC,aAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,OAAO,EAAET,GAFX;AAGE,QAAA,EAAE,EAAES,KAAK,KAAKd,KAHhB;AAIE,QAAA,UAAU,EAAC,MAJb;AAKE,QAAA,aAAa,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,KAAK,EAAE;AAAEe,UAAAA,eAAe,EAAG,OAAMF,KAAM;AAAhC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAWD,KAZa,CAAd;AAcA,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAyBF,KAAzB,MADF;AAGD;;AAjCiC,C,CAsCpC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Slide.css';\nimport { CSSTransition } from \"react-transition-group\";\nconst [count, setCount] = useState(0);\n\n// type Props = {\n//   sec: number;\n//   images: string[];\n// };\n\n// const images = ['./image/top1.jpg',\n//       // {\n//       //   url: './image/top1.jpg',\n//       // },\n//       // {\n//       //   url: './image/top2.jpg',\n//       // },\n//       // {\n//       //   url: './image/top3.jpg',\n//       // },\n//       // {\n//       //   url: './image/top4.jpg',\n//       // },\n//       // {\n//       //   url: './image/top5.jpg',\n//       // },\n//       // {\n//       //   url: './image/top6.jpg',\n//       // },\n//     ];\nclass Slide extends React.Component {\n  render() {\n    \n    const sec = 1000;\n    const images = ['./image/top1.jpg'];\n    useEffect(() => {\n    const interval = setInterval(() => {\n      setCount((count) => {\n        return count >= images.length - 1 ? 0 : count + 1;\n      });\n      }, sec);\n      return () => {\n        clearInterval(interval);\n      };\n    }, [images, sec]);\n\n    const slide = images.map((image, index) => {\n      return (\n        <CSSTransition\n          key={index}\n          timeout={sec}\n          in={index === count}\n          classNames=\"fade\"\n          unmountOnExit\n        >\n          <div className='header-img' style={{ backgroundImage: `url(${image})` }} />\n        </CSSTransition>\n      );\n    });\n\n    return (\n      <div className='slide'> {slide} </div>\n    );\n  }\n\n}\n\n\n// // そろそろ始めましょうか\n// const Slide: React.FC<Props> = ({ sec = 1000, images = '../image/top1.jpg' }: Props) => {\n//   // 表示する画像を指定するための変数\n//   const [count, setCount] = useState(0);\n\n//   // 一定時間ごとに表示する画像を切り替える処理\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setCount((count) => {\n//         return count >= images.length - 1 ? 0 : count + 1;\n//       });\n//     }, sec);\n//     return () => {\n//       clearInterval(interval);\n//     };\n//   }, [images, sec]);\n\n//   // 画像表示処理\n//   const slide = images.map((image, index) => {\n//     return (\n//       <CSSTransition\n//         key={index}\n//         timeout={sec}\n//         in={index === count}\n//         classNames=\"fade\"\n//         unmountOnExit\n//       >\n//         <div className='header-img' style={{ backgroundImage: `url(${image})` }} />\n//       </CSSTransition>\n//     );\n//   });\n//   // return <div className='header-img'>{slide}</div>;\n//   return <div className='slide'> {slide} </div>\n// };\n\nexport default Slide;"]},"metadata":{},"sourceType":"module"}