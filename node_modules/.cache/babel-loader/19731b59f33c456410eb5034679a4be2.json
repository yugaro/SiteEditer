{"ast":null,"code":"var _jsxFileName = \"/Users/yuga/Yu-legance/test23/src/components/Header/Slide/Slide.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Slide.css';\nimport { CSSTransition } from \"react-transition-group\";\nconst images = ['./image/top1.jpg' // {\n//   url: './image/top1.jpg',\n// },\n// {\n//   url: './image/top2.jpg',\n// },\n// {\n//   url: './image/top3.jpg',\n// },\n// {\n//   url: './image/top4.jpg',\n// },\n// {\n//   url: './image/top5.jpg',\n// },\n// {\n//   url: './image/top6.jpg',\n// },\n]; // そろそろ始めましょうか\n\nconst Slide = ({\n  sec = 1000,\n  images = '../image/top1.jpg'\n}) => {\n  // 表示する画像を指定するための変数\n  const [count, setCount] = useState(0); // 一定時間ごとに表示する画像を切り替える処理\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount(count => {\n        return count >= images.length - 1 ? 0 : count + 1;\n      });\n    }, sec);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [images, sec]); // 画像表示処理\n\n  const slide = images.map((image, index) => {\n    return /*#__PURE__*/React.createElement(CSSTransition, {\n      key: index,\n      timeout: sec,\n      in: index === count,\n      classNames: \"fade\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundImage: `url(${image})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }, slide);\n};\n\nexport default Slide;","map":{"version":3,"sources":["/Users/yuga/Yu-legance/test23/src/components/Header/Slide/Slide.js"],"names":["React","useState","useEffect","CSSTransition","images","Slide","sec","count","setCount","interval","setInterval","length","clearInterval","slide","map","image","index","backgroundImage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,aAAP;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAOA,MAAMC,MAAM,GAAG,CAAC,kBAAD,CACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBS,CAAf,C,CAsBA;;AACA,MAAMC,KAAsB,GAAG,CAAC;AAAEC,EAAAA,GAAG,GAAG,IAAR;AAAcF,EAAAA,MAAM,GAAG;AAAvB,CAAD,KAAyD;AACtF;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC,CAFsF,CAItF;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACjCF,MAAAA,QAAQ,CAAED,KAAD,IAAW;AAClB,eAAOA,KAAK,IAAIH,MAAM,CAACO,MAAP,GAAgB,CAAzB,GAA6B,CAA7B,GAAiCJ,KAAK,GAAG,CAAhD;AACD,OAFO,CAAR;AAGD,KAJ2B,EAIzBD,GAJyB,CAA5B;AAKA,WAAO,MAAM;AACXM,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD,KAFD;AAGD,GATQ,EASN,CAACL,MAAD,EAASE,GAAT,CATM,CAAT,CALsF,CAgBtF;;AACA,QAAMO,KAAK,GAAGT,MAAM,CAACU,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACzC,wBACE,oBAAC,aAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,OAAO,EAAEV,GAFX;AAGE,MAAA,EAAE,EAAEU,KAAK,KAAKT,KAHhB;AAIE,MAAA,UAAU,EAAC,MAJb;AAKE,MAAA,aAAa,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAK,MAAA,KAAK,EAAE;AAAEU,QAAAA,eAAe,EAAG,OAAMF,KAAM;AAAhC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD,GAZa,CAAd;AAaA,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,KAA7B,CAAP;AACD,CA/BD;;AAiCA,eAAeR,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Slide.css';\nimport { CSSTransition } from \"react-transition-group\";\n\ntype Props = {\n  sec: number;\n  images: string[];\n};\n\nconst images = ['./image/top1.jpg',\n      // {\n      //   url: './image/top1.jpg',\n      // },\n      // {\n      //   url: './image/top2.jpg',\n      // },\n      // {\n      //   url: './image/top3.jpg',\n      // },\n      // {\n      //   url: './image/top4.jpg',\n      // },\n      // {\n      //   url: './image/top5.jpg',\n      // },\n      // {\n      //   url: './image/top6.jpg',\n      // },\n    ];\n\n\n// そろそろ始めましょうか\nconst Slide: React.FC<Props> = ({ sec = 1000, images = '../image/top1.jpg' }: Props) => {\n  // 表示する画像を指定するための変数\n  const [count, setCount] = useState(0);\n\n  // 一定時間ごとに表示する画像を切り替える処理\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount((count) => {\n        return count >= images.length - 1 ? 0 : count + 1;\n      });\n    }, sec);\n    return () => {\n      clearInterval(interval);\n    };\n  }, [images, sec]);\n\n  // 画像表示処理\n  const slide = images.map((image, index) => {\n    return (\n      <CSSTransition\n        key={index}\n        timeout={sec}\n        in={index === count}\n        classNames=\"fade\"\n        unmountOnExit\n      >\n        <div style={{ backgroundImage: `url(${image})` }} />\n      </CSSTransition>\n    );\n  });\n  return <div className='header-img'>{slide}</div>;\n};\n\nexport default Slide;"]},"metadata":{},"sourceType":"module"}